import numpy as np
import pandas as pd
from catboost import CatBoostRanker, Pool

from utils import evaluate, ROCAUCMetric, VAL_USER_IDS_PATH


columns1 = set(['user_id', 'item_id', 'timespent', 'like', 'dislike', 'share',
       'bookmarks', 'explicit', 'source_id', 'duration', 'gender', 'age',
       'num_of_views_by_user_id', 'num_of_likes_by_user_id',
       'ratio_of_likes_by_user_id', 'num_of_dislikes_by_user_id',
       'ratio_of_dislikes_by_user_id', 'num_of_shares_by_user_id',
       'ratio_of_shares_by_user_id', 'num_of_bookmarks_by_user_id',
       'ratio_of_bookmarks_by_user_id', 'num_of_views_by_item_id',
       'num_of_likes_by_item_id', 'ratio_of_likes_by_item_id',
       'num_of_dislikes_by_item_id', 'ratio_of_dislikes_by_item_id',
       'num_of_shares_by_item_id', 'ratio_of_shares_by_item_id',
       'num_of_bookmarks_by_item_id', 'ratio_of_bookmarks_by_item_id',
       'num_of_views_by_source_id', 'num_of_likes_by_source_id',
       'ratio_of_likes_by_source_id', 'num_of_dislikes_by_source_id',
       'ratio_of_dislikes_by_source_id', 'num_of_shares_by_source_id',
       'ratio_of_shares_by_source_id', 'num_of_bookmarks_by_source_id',
       'ratio_of_bookmarks_by_source_id', 'min_viewers_age_by_item_id',
       'max_viewers_age_by_item_id', 'mean_viewers_age_by_item_id',
       'median_viewers_age_by_item_id', 'std_viewers_age_by_item_id',
       'min_viewers_gender_by_item_id', 'max_viewers_gender_by_item_id',
       'mean_viewers_gender_by_item_id', 'median_viewers_gender_by_item_id',
       'std_viewers_gender_by_item_id', 'user_view_counts_by_source_id',
       'user_like_counts_by_source_id',
       'user_view_counts_by_source_id_ratio_to_views',
       'user_like_counts_by_source_id_ratio_to_views',
       'user_like_counts_by_source_id_ratio_to_likes']
)

columns2 = set([
    'num_of_views_by_user_id',
    'num_of_likes_by_user_id',
    'ratio_of_likes_by_user_id',
    'num_of_dislikes_by_user_id',
    'ratio_of_dislikes_by_user_id',
    'num_of_shares_by_user_id',
    'ratio_of_shares_by_user_id',
    'num_of_bookmarks_by_user_id',
    'ratio_of_bookmarks_by_user_id',
    'num_of_views_by_item_id',
    'num_of_likes_by_item_id',
    'ratio_of_likes_by_item_id',
    'num_of_dislikes_by_item_id',
    'ratio_of_dislikes_by_item_id',
    'num_of_shares_by_item_id',
    'ratio_of_shares_by_item_id',
    'num_of_bookmarks_by_item_id',
    'ratio_of_bookmarks_by_item_id',
    'num_of_views_by_source_id',
    'num_of_likes_by_source_id',
    'ratio_of_likes_by_source_id',
    'num_of_dislikes_by_source_id',
    'ratio_of_dislikes_by_source_id',
    'num_of_shares_by_source_id',
    'ratio_of_shares_by_source_id',
    'num_of_bookmarks_by_source_id',
    'ratio_of_bookmarks_by_source_id',
    'min_viewers_age_by_item_id',
    'max_viewers_age_by_item_id',
    'mean_viewers_age_by_item_id',
    'median_viewers_age_by_item_id',
    'std_viewers_age_by_item_id',
    'min_viewers_gender_by_item_id',
    'max_viewers_gender_by_item_id',
    'mean_viewers_gender_by_item_id',
    'median_viewers_gender_by_item_id',
    'std_viewers_gender_by_item_id',
    'min_likers_age_by_item_id',
    'max_likers_age_by_item_id',
    'mean_likers_age_by_item_id',
    'median_likers_age_by_item_id',
    'std_likers_age_by_item_id',
    'min_likers_gender_by_item_id',
    'max_likers_gender_by_item_id',
    'mean_likers_gender_by_item_id',
    'median_likers_gender_by_item_id',
    'std_likers_gender_by_item_id',
    "user_like_counts_by_source_id",
    "user_view_counts_by_source_id",
    "user_view_counts_by_source_id_ratio_to_views",
    "user_like_counts_by_source_id_ratio_to_views",
    "user_like_counts_by_source_id_ratio_to_likes",
])

print(columns1 - columns2)
print(columns2 - columns1)